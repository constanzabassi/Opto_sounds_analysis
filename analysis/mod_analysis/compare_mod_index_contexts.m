function [context_comparison,sig_mod_boot_thr] = compare_mod_index_contexts(contexts_to_compare,context_labels,params,sig_mod_boot, mod_indexm, all_celltypes)
    % Compare mod index across different behavioral contexts
    % 
    % Inputs:
    %   params  - Configuration parameters
    %   results - Analysis results including modulation indices
    %   data    - Processed neural data
    
    % Initialize output structure
    context_comparison = struct();
    
    % Get context labels and indices
%     contexts_to_compare = [1, 2];  % Active vs Passive
%     context_labels = {'Active', 'Passive', 'Both'};
    
    % Calculate overlap percentages
    context_comparison.overlap = struct(...
        'percent_cells', calculate_sig_overlap_percentages(...
            sig_mod_boot, ...
            mod_indexm, ...
            contexts_to_compare), ...
        'contexts', contexts_to_compare, ...
        'labels', {context_labels});

    % get cells using threshold
    sig_mod_boot_thr = plot_pie_thresholded_mod_index(params.info, params.mod, ...
        mod_indexm, sig_mod_boot, sorted_cells, save_dir);
    
    % Organize significant modulation indices by context and cell type
    [context_comparison.mod_all, ...
     context_comparison.cells.pyr, ...
     context_comparison.cells.som, ...
     context_comparison.cells.pv, ...
     context_comparison.celltypes_ids] = organize_sig_mod_index_contexts_celltypes(...
        params.info.chosen_mice, ...
        mod_indexm, ...
        sig_mod_boot, ...
        all_celltypes, ...
        params.plot_info.celltype_names);
    
%     % Run statistical comparisons
%     [context_comparison.stats.anova, ...
%      context_comparison.stats.pairwise] = stats_mod_index(context_comparison.mod_all);
    
    % Store parameters used
    context_comparison.params = struct(...
        'chosen_mice', params.info.chosen_mice, ...
        'contexts', contexts_to_compare, ...
        'labels', {context_labels});
end